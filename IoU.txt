import numpy as np

def IoU(vertice1, vertice2):
     """
     这是计算两个矩形区域的交并比函数，verticle格式为:[xin,ymin,xmax,ymax]
     :param vertice1: 目标框1
     :param vertice2: 目标框1
     :return: 两个矩形区域的交并比
     """
     # 计算区域交集的左上与右下坐标
     lu = np.maximum(vertice1[0:2], vertice2[0:2])
     rd = np.minimum(vertice1[2:], vertice2[2:])
     # 计算区域交集的面积
     intersection = np.maximum(0.0, rd - lu)
     inter_square = intersection[0] * intersection[1]
     # 计算区域并集的面积
     square1 = (vertice1[2] - vertice1[0]) * (vertice1[3] - vertice1[1])
     square2 = (vertice2[2] - vertice2[0]) * (vertice2[3] - vertice2[1])
     union_square = np.maximum(square1 + square2 - inter_square, 1e-10)
     return np.clip(inter_square / union_square, 0.0, 1.0)
