import numpy as np  

def py_cpu_nms(dets, thresh):
    """
    这是NMS去除重复目标框的函数
    :param dets: 目标框数组，目标框的格式为：[xin,ymin,xmax,ymax,score]
    :param thresh: 阈值
    :return: 不重复的目标框数组在元目标框数组中的下标数组
    """

    vertices = dets[:, 0:4]  # 目标框
    scores = dets[:, 4]  # bbox打分

    #areas = (x2 - x1 + 1) * (y2 - y1 + 1)
    # 打分从大到小排列，取index
    order = scores.argsort()[::-1]
    # keep为最后保留的边框
    keep = []
    while order.size > 0:
        # order[0]是当前分数最大的窗口，肯定保留
        i = order[0]
        keep.append(i)
        # 计算窗口i与其他所有窗口的交叠部分的面积
        ious = np.array([IoU(vertices[i], vertices[j]) for j in order[1:]])
        # inds为所有与窗口i的iou值小于threshold值的窗口的index，其他窗口此次都被窗口i吸收
        inds = np.where(ious <= thresh)[0]
        # order里面只保留与窗口i交叠面积小于threshold的那些窗口，由于ovr长度比order长度少1(不包       含i)，所以inds+1对应到保留的窗口
        order = order[inds + 1]
    return keep